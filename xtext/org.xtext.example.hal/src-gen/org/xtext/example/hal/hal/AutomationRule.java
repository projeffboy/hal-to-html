/**
 * generated by Xtext 2.26.0
 */
package org.xtext.example.hal.hal;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Automation Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.hal.hal.AutomationRule#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.hal.hal.AutomationRule#isActive <em>Active</em>}</li>
 *   <li>{@link org.xtext.example.hal.hal.AutomationRule#getPrecondition <em>Precondition</em>}</li>
 *   <li>{@link org.xtext.example.hal.hal.AutomationRule#getActions <em>Actions</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.hal.hal.HalPackage#getAutomationRule()
 * @model
 * @generated
 */
public interface AutomationRule extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see org.xtext.example.hal.hal.HalPackage#getAutomationRule_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link org.xtext.example.hal.hal.AutomationRule#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Active</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Active</em>' attribute.
   * @see #setActive(boolean)
   * @see org.xtext.example.hal.hal.HalPackage#getAutomationRule_Active()
   * @model
   * @generated
   */
  boolean isActive();

  /**
   * Sets the value of the '{@link org.xtext.example.hal.hal.AutomationRule#isActive <em>Active</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Active</em>' attribute.
   * @see #isActive()
   * @generated
   */
  void setActive(boolean value);

  /**
   * Returns the value of the '<em><b>Precondition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Precondition</em>' containment reference.
   * @see #setPrecondition(BooleanExpression)
   * @see org.xtext.example.hal.hal.HalPackage#getAutomationRule_Precondition()
   * @model containment="true"
   * @generated
   */
  BooleanExpression getPrecondition();

  /**
   * Sets the value of the '{@link org.xtext.example.hal.hal.AutomationRule#getPrecondition <em>Precondition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Precondition</em>' containment reference.
   * @see #getPrecondition()
   * @generated
   */
  void setPrecondition(BooleanExpression value);

  /**
   * Returns the value of the '<em><b>Actions</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.hal.hal.Action}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Actions</em>' containment reference list.
   * @see org.xtext.example.hal.hal.HalPackage#getAutomationRule_Actions()
   * @model containment="true"
   * @generated
   */
  EList<Action> getActions();

} // AutomationRule
