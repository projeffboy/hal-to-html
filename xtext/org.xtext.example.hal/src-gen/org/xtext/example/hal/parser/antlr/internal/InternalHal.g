/*
 * generated by Xtext 2.26.0
 */
grammar InternalHal;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.hal.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.hal.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.hal.services.HalGrammarAccess;

}

@parser::members {

 	private HalGrammarAccess grammarAccess;

    public InternalHalParser(TokenStream input, HalGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "HAL";
   	}

   	@Override
   	protected HalGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHAL
entryRuleHAL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHALRule()); }
	iv_ruleHAL=ruleHAL
	{ $current=$iv_ruleHAL.current; }
	EOF;

// Rule HAL
ruleHAL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='password'
		{
			newLeafNode(otherlv_0, grammarAccess.getHALAccess().getPasswordKeyword_0());
		}
		(
			(
				lv_password_1_0=RULE_STRING
				{
					newLeafNode(lv_password_1_0, grammarAccess.getHALAccess().getPasswordSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHALRule());
					}
					setWithLastConsumed(
						$current,
						"password",
						lv_password_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='address'
		{
			newLeafNode(otherlv_2, grammarAccess.getHALAccess().getAddressKeyword_2());
		}
		(
			(
				lv_address_3_0=RULE_STRING
				{
					newLeafNode(lv_address_3_0, grammarAccess.getHALAccess().getAddressSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHALRule());
					}
					setWithLastConsumed(
						$current,
						"address",
						lv_address_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4='types'
			{
				newLeafNode(otherlv_4, grammarAccess.getHALAccess().getTypesKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				otherlv_6='sensors'
				{
					newLeafNode(otherlv_6, grammarAccess.getHALAccess().getSensorsKeyword_4_2_0());
				}
				otherlv_7='{'
				{
					newLeafNode(otherlv_7, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_2_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getHALAccess().getTypesSensorParserRuleCall_4_2_2_0_0());
							}
							lv_types_8_0=ruleSensor
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getHALRule());
								}
								add(
									$current,
									"types",
									lv_types_8_0,
									"org.xtext.example.hal.Hal.Sensor");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_9=','
						{
							newLeafNode(otherlv_9, grammarAccess.getHALAccess().getCommaKeyword_4_2_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getHALAccess().getTypesSensorParserRuleCall_4_2_2_1_1_0());
								}
								lv_types_10_0=ruleSensor
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getHALRule());
									}
									add(
										$current,
										"types",
										lv_types_10_0,
										"org.xtext.example.hal.Hal.Sensor");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_11='}'
				{
					newLeafNode(otherlv_11, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_2_3());
				}
			)?
			(
				otherlv_12='actuators'
				{
					newLeafNode(otherlv_12, grammarAccess.getHALAccess().getActuatorsKeyword_4_3_0());
				}
				otherlv_13='{'
				{
					newLeafNode(otherlv_13, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHALAccess().getTypesActuatorParserRuleCall_4_3_2_0());
						}
						lv_types_14_0=ruleActuator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHALRule());
							}
							add(
								$current,
								"types",
								lv_types_14_0,
								"org.xtext.example.hal.Hal.Actuator");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_15='}'
				{
					newLeafNode(otherlv_15, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_3_3());
				}
			)?
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_17='rooms'
			{
				newLeafNode(otherlv_17, grammarAccess.getHALAccess().getRoomsKeyword_5_0());
			}
			otherlv_18='{'
			{
				newLeafNode(otherlv_18, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHALAccess().getRoomsRoomParserRuleCall_5_2_0());
					}
					lv_rooms_19_0=ruleRoom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHALRule());
						}
						add(
							$current,
							"rooms",
							lv_rooms_19_0,
							"org.xtext.example.hal.Hal.Room");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_20='}'
			{
				newLeafNode(otherlv_20, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		(
			otherlv_21='rules'
			{
				newLeafNode(otherlv_21, grammarAccess.getHALAccess().getRulesKeyword_6_0());
			}
			otherlv_22='{'
			{
				newLeafNode(otherlv_22, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHALAccess().getRulesAutomationRuleParserRuleCall_6_2_0());
					}
					lv_rules_23_0=ruleAutomationRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHALRule());
						}
						add(
							$current,
							"rules",
							lv_rules_23_0,
							"org.xtext.example.hal.Hal.AutomationRule");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_24='}'
			{
				newLeafNode(otherlv_24, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
		(
			otherlv_25='sensorEntries'
			{
				newLeafNode(otherlv_25, grammarAccess.getHALAccess().getSensorEntriesKeyword_7_0());
			}
			otherlv_26='{'
			{
				newLeafNode(otherlv_26, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHALAccess().getEntriesSensorEntryParserRuleCall_7_2_0());
					}
					lv_entries_27_0=ruleSensorEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHALRule());
						}
						add(
							$current,
							"entries",
							lv_entries_27_0,
							"org.xtext.example.hal.Hal.SensorEntry");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_28='}'
			{
				newLeafNode(otherlv_28, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getAtomicRelationalTermParserRuleCall_0());
		}
		this_AtomicRelationalTerm_0=ruleAtomicRelationalTerm
		{
			$current = $this_AtomicRelationalTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getCompoundRelationalTermParserRuleCall_1());
		}
		this_CompoundRelationalTerm_1=ruleCompoundRelationalTerm
		{
			$current = $this_CompoundRelationalTerm_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_STRING_0=RULE_STRING
			{
				$current.merge(this_STRING_0);
			}
			{
				newLeafNode(this_STRING_0, grammarAccess.getQualifiedNameAccess().getSTRINGTerminalRuleCall_0_0());
			}
			    |
			this_ID_1=RULE_ID
			{
				$current.merge(this_ID_1);
			}
			{
				newLeafNode(this_ID_1, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0_1());
			}
		)
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			(
				this_STRING_3=RULE_STRING
				{
					$current.merge(this_STRING_3);
				}
				{
					newLeafNode(this_STRING_3, grammarAccess.getQualifiedNameAccess().getSTRINGTerminalRuleCall_1_1_0());
				}
				    |
				this_ID_4=RULE_ID
				{
					$current.merge(this_ID_4);
				}
				{
					newLeafNode(this_ID_4, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1_1());
				}
			)
		)?
	)
;

// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	iv_ruleRoom=ruleRoom
	{ $current=$iv_ruleRoom.current; }
	EOF;

// Rule Room
ruleRoom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getNameQualifiedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.hal.Hal.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRoomAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getLengthPosFloatParserRuleCall_2_0());
				}
				lv_length_2_0=rulePosFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"length",
						lv_length_2_0,
						"org.xtext.example.hal.Hal.PosFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='x'
		{
			newLeafNode(otherlv_3, grammarAccess.getRoomAccess().getXKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getWidthPosFloatParserRuleCall_4_0());
				}
				lv_width_4_0=rulePosFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"width",
						lv_width_4_0,
						"org.xtext.example.hal.Hal.PosFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getRoomAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRoomAccess().getDevicesDeviceParserRuleCall_7_0_0());
					}
					lv_devices_7_0=ruleDevice
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoomRule());
						}
						add(
							$current,
							"devices",
							lv_devices_7_0,
							"org.xtext.example.hal.Hal.Device");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getRoomAccess().getCommaKeyword_7_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRoomAccess().getDevicesDeviceParserRuleCall_7_1_1_0());
						}
						lv_devices_9_0=ruleDevice
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoomRule());
							}
							add(
								$current,
								"devices",
								lv_devices_9_0,
								"org.xtext.example.hal.Hal.Device");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleAutomationRule
entryRuleAutomationRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAutomationRuleRule()); }
	iv_ruleAutomationRule=ruleAutomationRule
	{ $current=$iv_ruleAutomationRule.current; }
	EOF;

// Rule AutomationRule
ruleAutomationRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAutomationRuleAccess().getNameQualifiedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAutomationRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.hal.Hal.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getAutomationRuleAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_active_2_0='active'
					{
						newLeafNode(lv_active_2_0, grammarAccess.getAutomationRuleAccess().getActiveActiveKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAutomationRuleRule());
						}
						setWithLastConsumed($current, "active", lv_active_2_0 != null, "active");
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getAutomationRuleAccess().getRightParenthesisKeyword_1_2());
			}
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getAutomationRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_5='WHEN'
		{
			newLeafNode(otherlv_5, grammarAccess.getAutomationRuleAccess().getWHENKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAutomationRuleAccess().getPreconditionBooleanExpressionParserRuleCall_4_0());
				}
				lv_precondition_6_0=ruleBooleanExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAutomationRuleRule());
					}
					set(
						$current,
						"precondition",
						lv_precondition_6_0,
						"org.xtext.example.hal.Hal.BooleanExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='THEN'
		{
			newLeafNode(otherlv_7, grammarAccess.getAutomationRuleAccess().getTHENKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAutomationRuleAccess().getActionsActionParserRuleCall_6_0());
				}
				lv_actions_8_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAutomationRuleRule());
					}
					add(
						$current,
						"actions",
						lv_actions_8_0,
						"org.xtext.example.hal.Hal.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getAutomationRuleAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAutomationRuleAccess().getActionsActionParserRuleCall_7_1_0());
					}
					lv_actions_10_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAutomationRuleRule());
						}
						add(
							$current,
							"actions",
							lv_actions_10_0,
							"org.xtext.example.hal.Hal.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getAutomationRuleAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSensorEntry
entryRuleSensorEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorEntryRule()); }
	iv_ruleSensorEntry=ruleSensorEntry
	{ $current=$iv_ruleSensorEntry.current; }
	EOF;

// Rule SensorEntry
ruleSensorEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorEntryRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSensorEntryAccess().getSensorDeviceCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSensorEntryAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='reading'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorEntryAccess().getReadingKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorEntryAccess().getReadingQualifiedNameParserRuleCall_3_0());
				}
				lv_reading_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorEntryRule());
					}
					set(
						$current,
						"reading",
						lv_reading_3_0,
						"org.xtext.example.hal.Hal.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='timestamp'
		{
			newLeafNode(otherlv_4, grammarAccess.getSensorEntryAccess().getTimestampKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorEntryAccess().getTimeStampELongParserRuleCall_5_0());
				}
				lv_timeStamp_5_0=ruleELong
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorEntryRule());
					}
					set(
						$current,
						"timeStamp",
						lv_timeStamp_5_0,
						"org.xtext.example.hal.Hal.ELong");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSensorEntryAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getNameQualifiedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.hal.Hal.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='is'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceAccess().getIsKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeviceAccess().getTypeKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getTypeDeviceTypeCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='at'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeviceAccess().getAtKeyword_4());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getDeviceAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getLengthPosPosFloatParserRuleCall_6_0());
				}
				lv_lengthPos_6_0=rulePosFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					set(
						$current,
						"lengthPos",
						lv_lengthPos_6_0,
						"org.xtext.example.hal.Hal.PosFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getDeviceAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getWidthPosPosFloatParserRuleCall_8_0());
				}
				lv_widthPos_8_0=rulePosFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					set(
						$current,
						"widthPos",
						lv_widthPos_8_0,
						"org.xtext.example.hal.Hal.PosFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getDeviceAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRulePosFloat
entryRulePosFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPosFloatRule()); }
	iv_rulePosFloat=rulePosFloat
	{ $current=$iv_rulePosFloat.current.getText(); }
	EOF;

// Rule PosFloat
rulePosFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getPosFloatAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPosFloatAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getPosFloatAccess().getINTTerminalRuleCall_1_1());
			}
			(
				(
					kw='E'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getPosFloatAccess().getEKeyword_1_2_0_0());
					}
					    |
					kw='e'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getPosFloatAccess().getEKeyword_1_2_0_1());
					}
				)
				(
					kw='-'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getPosFloatAccess().getHyphenMinusKeyword_1_2_1());
					}
				)?
				this_INT_6=RULE_INT
				{
					$current.merge(this_INT_6);
				}
				{
					newLeafNode(this_INT_6, grammarAccess.getPosFloatAccess().getINTTerminalRuleCall_1_2_2());
				}
			)?
		)?
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActionAccess().getActuatorDeviceCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='runs'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionAccess().getRunsKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getActionAccess().getCommandCommandCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtomicRelationalTerm
entryRuleAtomicRelationalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRelationalTermRule()); }
	iv_ruleAtomicRelationalTerm=ruleAtomicRelationalTerm
	{ $current=$iv_ruleAtomicRelationalTerm.current; }
	EOF;

// Rule AtomicRelationalTerm
ruleAtomicRelationalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_negated_0_0='NOT'
				{
					newLeafNode(lv_negated_0_0, grammarAccess.getAtomicRelationalTermAccess().getNegatedNOTKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomicRelationalTermRule());
					}
					setWithLastConsumed($current, "negated", lv_negated_0_0 != null, "NOT");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomicRelationalTermRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAtomicRelationalTermAccess().getSensorDeviceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomicRelationalTermAccess().getOperatorComparisonOperatorEnumRuleCall_2_0());
				}
				lv_operator_2_0=ruleComparisonOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomicRelationalTermRule());
					}
					set(
						$current,
						"operator",
						lv_operator_2_0,
						"org.xtext.example.hal.Hal.ComparisonOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomicRelationalTermAccess().getComparedAgainstValueQualifiedNameParserRuleCall_3_0());
				}
				lv_comparedAgainstValue_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomicRelationalTermRule());
					}
					set(
						$current,
						"comparedAgainstValue",
						lv_comparedAgainstValue_3_0,
						"org.xtext.example.hal.Hal.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompoundRelationalTerm
entryRuleCompoundRelationalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompoundRelationalTermRule()); }
	iv_ruleCompoundRelationalTerm=ruleCompoundRelationalTerm
	{ $current=$iv_ruleCompoundRelationalTerm.current; }
	EOF;

// Rule CompoundRelationalTerm
ruleCompoundRelationalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_negated_0_0='NOT'
				{
					newLeafNode(lv_negated_0_0, grammarAccess.getCompoundRelationalTermAccess().getNegatedNOTKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompoundRelationalTermRule());
					}
					setWithLastConsumed($current, "negated", lv_negated_0_0 != null, "NOT");
				}
			)
		)?
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCompoundRelationalTermAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompoundRelationalTermAccess().getLHSBooleanExpressionParserRuleCall_2_0());
				}
				lv_LHS_2_0=ruleBooleanExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompoundRelationalTermRule());
					}
					set(
						$current,
						"LHS",
						lv_LHS_2_0,
						"org.xtext.example.hal.Hal.BooleanExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompoundRelationalTermAccess().getOperatorBooleanOperatorEnumRuleCall_3_0());
				}
				lv_operator_3_0=ruleBooleanOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompoundRelationalTermRule());
					}
					set(
						$current,
						"operator",
						lv_operator_3_0,
						"org.xtext.example.hal.Hal.BooleanOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompoundRelationalTermAccess().getRHSBooleanExpressionParserRuleCall_4_0());
				}
				lv_RHS_4_0=ruleBooleanExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompoundRelationalTermRule());
					}
					set(
						$current,
						"RHS",
						lv_RHS_4_0,
						"org.xtext.example.hal.Hal.BooleanExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompoundRelationalTermAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCommandAccess().getNameQualifiedNameParserRuleCall_0());
			}
			lv_name_0_0=ruleQualifiedName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getCommandRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.hal.Hal.QualifiedName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSensorAccess().getNameQualifiedNameParserRuleCall_0());
			}
			lv_name_0_0=ruleQualifiedName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSensorRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.hal.Hal.QualifiedName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getNameQualifiedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.hal.Hal.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getActuatorAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getActuatorAccess().getCommandsCommandParserRuleCall_2_0_0());
					}
					lv_commands_2_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActuatorRule());
						}
						add(
							$current,
							"commands",
							lv_commands_2_0,
							"org.xtext.example.hal.Hal.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getActuatorAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActuatorAccess().getCommandsCommandParserRuleCall_2_1_1_0());
						}
						lv_commands_4_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActuatorRule());
							}
							add(
								$current,
								"commands",
								lv_commands_4_0,
								"org.xtext.example.hal.Hal.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getActuatorAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleELong
entryRuleELong returns [String current=null]:
	{ newCompositeNode(grammarAccess.getELongRule()); }
	iv_ruleELong=ruleELong
	{ $current=$iv_ruleELong.current.getText(); }
	EOF;

// Rule ELong
ruleELong returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getELongAccess().getINTTerminalRuleCall());
	}
;

// Rule ComparisonOperator
ruleComparisonOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='>'
			{
				$current = grammarAccess.getComparisonOperatorAccess().getGREATERTHANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparisonOperatorAccess().getGREATERTHANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='>='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getGREATERTHANOREQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComparisonOperatorAccess().getGREATERTHANOREQUALEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='<'
			{
				$current = grammarAccess.getComparisonOperatorAccess().getLESSTHANEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComparisonOperatorAccess().getLESSTHANEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='<='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getLESSTHANOREQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComparisonOperatorAccess().getLESSTHANOREQUALEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='!='
			{
				$current = grammarAccess.getComparisonOperatorAccess().getNOTEQUALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getComparisonOperatorAccess().getNOTEQUALEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule BooleanOperator
ruleBooleanOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AND'
			{
				$current = grammarAccess.getBooleanOperatorAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBooleanOperatorAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='OR'
			{
				$current = grammarAccess.getBooleanOperatorAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBooleanOperatorAccess().getOREnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
