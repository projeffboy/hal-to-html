/*
 * generated by Xtext 2.26.0
 */
package org.xtext.example.hal.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.hal.services.HalGrammarAccess;

@SuppressWarnings("all")
public class HalSyntacticSequencer extends AbstractSyntacticSequencer {

	protected HalGrammarAccess grammarAccess;
	protected AbstractElementAlias match_HAL___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q;
	protected AbstractElementAlias match_HAL___RoomsKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q;
	protected AbstractElementAlias match_HAL___RulesKeyword_6_0_LeftCurlyBracketKeyword_6_1_RightCurlyBracketKeyword_6_3__q;
	protected AbstractElementAlias match_HAL___SensorEntriesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q;
	protected AbstractElementAlias match_HAL___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q;
	protected AbstractElementAlias match_HAL___TypesKeyword_4_0_LeftCurlyBracketKeyword_4_1___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q_RightCurlyBracketKeyword_4_4__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (HalGrammarAccess) access;
		match_HAL___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getActuatorsKeyword_4_3_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_3_1()), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_3_3()));
		match_HAL___RoomsKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getRoomsKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_5_3()));
		match_HAL___RulesKeyword_6_0_LeftCurlyBracketKeyword_6_1_RightCurlyBracketKeyword_6_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getRulesKeyword_6_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_6_1()), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_6_3()));
		match_HAL___SensorEntriesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getSensorEntriesKeyword_7_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_7_1()), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_7_3()));
		match_HAL___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getSensorsKeyword_4_2_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_2_1()), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_2_3()));
		match_HAL___TypesKeyword_4_0_LeftCurlyBracketKeyword_4_1___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q_RightCurlyBracketKeyword_4_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getTypesKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_1()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getSensorsKeyword_4_2_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_2_1()), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_2_3())), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHALAccess().getActuatorsKeyword_4_3_0()), new TokenAlias(false, false, grammarAccess.getHALAccess().getLeftCurlyBracketKeyword_4_3_1()), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_3_3())), new TokenAlias(false, false, grammarAccess.getHALAccess().getRightCurlyBracketKeyword_4_4()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_HAL___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q.equals(syntax))
				emit_HAL___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HAL___RoomsKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q.equals(syntax))
				emit_HAL___RoomsKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HAL___RulesKeyword_6_0_LeftCurlyBracketKeyword_6_1_RightCurlyBracketKeyword_6_3__q.equals(syntax))
				emit_HAL___RulesKeyword_6_0_LeftCurlyBracketKeyword_6_1_RightCurlyBracketKeyword_6_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HAL___SensorEntriesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q.equals(syntax))
				emit_HAL___SensorEntriesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HAL___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q.equals(syntax))
				emit_HAL___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HAL___TypesKeyword_4_0_LeftCurlyBracketKeyword_4_1___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q_RightCurlyBracketKeyword_4_4__q.equals(syntax))
				emit_HAL___TypesKeyword_4_0_LeftCurlyBracketKeyword_4_1___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q_RightCurlyBracketKeyword_4_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('actuators' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     types+=Sensor '}' (ambiguity) '}' 'rooms' '{' rooms+=Room
	 *     types+=Sensor '}' (ambiguity) '}' ('rooms' '{' '}')? 'rules' '{' rules+=AutomationRule
	 *     types+=Sensor '}' (ambiguity) '}' ('rooms' '{' '}')? ('rules' '{' '}')? 'sensorEntries' '{' entries+=SensorEntry
	 *     types+=Sensor '}' (ambiguity) '}' ('rooms' '{' '}')? ('rules' '{' '}')? ('sensorEntries' '{' '}')? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HAL___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('rooms' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     address=STRING ('types' '{' ('sensors' '{' '}')? ('actuators' '{' '}')? '}')? (ambiguity) 'rules' '{' rules+=AutomationRule
	 *     address=STRING ('types' '{' ('sensors' '{' '}')? ('actuators' '{' '}')? '}')? (ambiguity) ('rules' '{' '}')? 'sensorEntries' '{' entries+=SensorEntry
	 *     address=STRING ('types' '{' ('sensors' '{' '}')? ('actuators' '{' '}')? '}')? (ambiguity) ('rules' '{' '}')? ('sensorEntries' '{' '}')? (rule end)
	 *     types+=Actuator '}' '}' (ambiguity) 'rules' '{' rules+=AutomationRule
	 *     types+=Actuator '}' '}' (ambiguity) ('rules' '{' '}')? 'sensorEntries' '{' entries+=SensorEntry
	 *     types+=Actuator '}' '}' (ambiguity) ('rules' '{' '}')? ('sensorEntries' '{' '}')? (rule end)
	 *     types+=Sensor '}' ('actuators' '{' '}')? '}' (ambiguity) 'rules' '{' rules+=AutomationRule
	 *     types+=Sensor '}' ('actuators' '{' '}')? '}' (ambiguity) ('rules' '{' '}')? 'sensorEntries' '{' entries+=SensorEntry
	 *     types+=Sensor '}' ('actuators' '{' '}')? '}' (ambiguity) ('rules' '{' '}')? ('sensorEntries' '{' '}')? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HAL___RoomsKeyword_5_0_LeftCurlyBracketKeyword_5_1_RightCurlyBracketKeyword_5_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('rules' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     address=STRING ('types' '{' ('sensors' '{' '}')? ('actuators' '{' '}')? '}')? ('rooms' '{' '}')? (ambiguity) 'sensorEntries' '{' entries+=SensorEntry
	 *     address=STRING ('types' '{' ('sensors' '{' '}')? ('actuators' '{' '}')? '}')? ('rooms' '{' '}')? (ambiguity) ('sensorEntries' '{' '}')? (rule end)
	 *     rooms+=Room '}' (ambiguity) 'sensorEntries' '{' entries+=SensorEntry
	 *     rooms+=Room '}' (ambiguity) ('sensorEntries' '{' '}')? (rule end)
	 *     types+=Actuator '}' '}' ('rooms' '{' '}')? (ambiguity) 'sensorEntries' '{' entries+=SensorEntry
	 *     types+=Actuator '}' '}' ('rooms' '{' '}')? (ambiguity) ('sensorEntries' '{' '}')? (rule end)
	 *     types+=Sensor '}' ('actuators' '{' '}')? '}' ('rooms' '{' '}')? (ambiguity) 'sensorEntries' '{' entries+=SensorEntry
	 *     types+=Sensor '}' ('actuators' '{' '}')? '}' ('rooms' '{' '}')? (ambiguity) ('sensorEntries' '{' '}')? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HAL___RulesKeyword_6_0_LeftCurlyBracketKeyword_6_1_RightCurlyBracketKeyword_6_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('sensorEntries' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     address=STRING ('types' '{' ('sensors' '{' '}')? ('actuators' '{' '}')? '}')? ('rooms' '{' '}')? ('rules' '{' '}')? (ambiguity) (rule end)
	 *     rooms+=Room '}' ('rules' '{' '}')? (ambiguity) (rule end)
	 *     rules+=AutomationRule '}' (ambiguity) (rule end)
	 *     types+=Actuator '}' '}' ('rooms' '{' '}')? ('rules' '{' '}')? (ambiguity) (rule end)
	 *     types+=Sensor '}' ('actuators' '{' '}')? '}' ('rooms' '{' '}')? ('rules' '{' '}')? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_HAL___SensorEntriesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('sensors' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     address=STRING 'types' '{' (ambiguity) 'actuators' '{' types+=Actuator
	 
	 * </pre>
	 */
	protected void emit_HAL___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('types' '{' ('sensors' '{' '}')? ('actuators' '{' '}')? '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     address=STRING (ambiguity) 'rooms' '{' rooms+=Room
	 *     address=STRING (ambiguity) ('rooms' '{' '}')? 'rules' '{' rules+=AutomationRule
	 *     address=STRING (ambiguity) ('rooms' '{' '}')? ('rules' '{' '}')? 'sensorEntries' '{' entries+=SensorEntry
	 *     address=STRING (ambiguity) ('rooms' '{' '}')? ('rules' '{' '}')? ('sensorEntries' '{' '}')? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HAL___TypesKeyword_4_0_LeftCurlyBracketKeyword_4_1___SensorsKeyword_4_2_0_LeftCurlyBracketKeyword_4_2_1_RightCurlyBracketKeyword_4_2_3__q___ActuatorsKeyword_4_3_0_LeftCurlyBracketKeyword_4_3_1_RightCurlyBracketKeyword_4_3_3__q_RightCurlyBracketKeyword_4_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
