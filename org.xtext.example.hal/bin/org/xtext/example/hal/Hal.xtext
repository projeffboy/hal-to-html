grammar org.xtext.example.hal.Hal with org.eclipse.xtext.common.Terminals

generate hal "http://www.xtext.org/example/hal/HAL"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

HAL:
	'password' password=STRING
	'address' address=STRING
	('types' '{'
		('sensors' '{'
			types+=Sensor ("," types+=Sensor)*
		'}')?
		('actuators' '{'
			types+=Actuator*
		'}')?
	'}')?
	('rooms' '{' rooms+=Room* '}')?
	('rules' '{' rules+=AutomationRule* '}')?
	('sensorEntries' '{' entries+=SensorEntry* '}')?;

DeviceType:
	Sensor | Actuator;

BooleanExpression:
	AtomicRelationalTerm | CompoundRelationalTerm;

QualifiedName:
	(STRING | ID) ('.' (STRING | ID))?;

Room:
	name=QualifiedName
	'('
	length=PosFloat
	'x'
	width=PosFloat
	')'
	'{'
	(devices+=Device ("," devices+=Device)*)?
	'}';

AutomationRule:
	name=QualifiedName
	('(' active?='active' ')')?
	'{'
	'WHEN' precondition=BooleanExpression
	'THEN' actions+=Action ("," actions+=Action)*
	'}';

SensorEntry:
	sensor=[Device|QualifiedName]
	'{'
	'reading' reading=QualifiedName
	'timestamp' timeStamp=ELong
	'}';

Device:
	name=QualifiedName
	'is' 'type'
	type=[DeviceType|QualifiedName]
	'at'
	'('
	lengthPos=PosFloat
	','
	widthPos=PosFloat
	')';

PosFloat returns ecore::EFloat:
	INT ('.' INT (('E' | 'e') '-'? INT)?)?;

Action:
	actuator=[Device|QualifiedName] 'runs' command=[Command|QualifiedName];

AtomicRelationalTerm:
	(negated?='NOT')?
	sensor=[Device|QualifiedName]
	operator=ComparisonOperator
	comparedAgainstValue=QualifiedName;

CompoundRelationalTerm:
	(negated?='NOT')?
	'('
	LHS=BooleanExpression
	operator=BooleanOperator
	RHS=BooleanExpression
	')';

enum ComparisonOperator:
	EQUAL='=' | GREATERTHAN='>' | GREATERTHANOREQUAL='>=' | LESSTHAN='<' |
	LESSTHANOREQUAL='<=' | NOTEQUAL='!=';

enum BooleanOperator:
	AND='AND' | OR='OR';

Command:
	{Command}
	name=QualifiedName;

Sensor:
	{Sensor}
	name=QualifiedName;

Actuator:
	{Actuator}
	name=QualifiedName
	'{'
	(commands+=Command ("," commands+=Command)*)?
	'}';

ELong returns ecore::ELong:
	INT;
