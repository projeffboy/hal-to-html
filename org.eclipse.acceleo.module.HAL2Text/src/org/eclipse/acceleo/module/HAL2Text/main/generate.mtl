[comment encoding = UTF-8 /]
[module generate('http://www.xtext.org/example/hal/HAL')]


[template public generateElement(aHal : HAL)]
[comment @main/]
[halPage(aHal)/]
[/template]

[template public halPage(aHal : HAL)]
[file ('HAL.html', false, 'UTF-8')]
<!DOCTYPE HTML>

<html>
	<head>
		<title>HAL Interface</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
		<link rel="stylesheet" href="assets/css/main.css" />
		<noscript><link rel="stylesheet" href="assets/css/noscript.css" /></noscript>
	</head>


	<body class="is-preload">

		<!-- Wrapper -->
			<div id="wrapper">

				<!-- Header -->
					<header id="header">
						<div class="content">
							<div class="inner">
								<h1>Improved Home Automation Language</h1>
								<p>Jeffery Tang	-	Weijing Zhang	-	Tian Han Jiang</p>
							</div>
						</div>
						<nav>
							<ul>
								<li><a href="#Visual">Visual Interface</a></li>
								<li><a href="#Menu">Textual Interface</a></li>
							</ul>
						</nav>
					</header>

				<!-- Main -->
					<div id="main">

						<!-- Visual -->
							<article id="Visual">
								<h2 class="major">Rooms</h2>

								<!-- Device Toggles -->
								<ul style="list-style-type: none; columns: 8; -webkit-columns: 8; -moz-columns: 8;">
									<li>
										<label class="switch">
											<input type="checkbox" onChange="displaySensors()" checked>
											<span class="slider round"></span>
										</label>
										<p>Sensor</p>
									</li>
									<li>
										<label class="switch">
											<input type="checkbox" onChange="displayActuators()" checked>
											<span class="slider round"></span>
										</label>
										<p>Actuator</p>
									</li>
									<li style="padding-left: 0">
										<label class="switch">
											<input type="checkbox" onChange="toggleHide()">
											<span class="slider round"></span>
										</label>
										<p>Enable click to hide device</p>
									</li>
								</ul>

								<small>All measurements are in cm</small>
								<br><br>

								<!-- Acceleo template -->
								[for (room : Room | rooms)]


									<!-- [room.name/] -->
									<div class="section">
										<h3 class="major">[room.name/]</h3>

										<div style="position: relative; border: 10px solid #DCDCDC; height: [room.length/]px; width: [room.width/]px; box-sizing: content-box;">
											[for (device : Device | room.devices)]

												[if (device.type.oclIsTypeOf(Sensor))]
													<div class="sensor" style="position: absolute; top: [device.lengthPos - 50/]px; left: [device.widthPos - 50/]px;">
														<img class="displayImage" src="./images/sensor.png" alt="Sensor">
														<div class="description">
															<ul>
																<li>[device.name/]</li>
																<li>([device.lengthPos/], [device.widthPos/])</li>
																
																[for (sensorEntry : SensorEntry | aHal.entries)]
																[if (sensorEntry.sensor = device)]
																<li>reading: [sensorEntry.reading/]</li>
																<li>timestamp: [sensorEntry.timeStamp/]</li>
																[/if]
																[/for]
															</ul>
														</div>
													</div>
												[/if]
												[if (device.type.oclIsTypeOf(Actuator))]
													<div class="actuator" style="position: absolute; top: [device.lengthPos - 50/]px; left: [device.widthPos - 50/]px">
														<img img class="displayImage" src="./images/actuator.png" alt="Actuator">
														<div class="description">
															<ul>
																<li>[device.name/]</li>
																<li>([device.lengthPos/], [device.widthPos/])</li>
							
																[for (command : Command | (device.type.oclAsType(Actuator)).commands)]
																<li>[command.name/]</li>
																[/for]

															</ul>
														</div>
													</div>
												[/if]

											[/for]
										</div>
									</div>

									<br><br><br>

								[/for]
							</article>

						<!-- Menu -->
							<article id="Menu">
								<h2 class="major">Textual Interface</h2>

								<small>All measurements are in cm</small>
								<br><br>

								<!-- Select shown device-->
								<select id="selectDevice">
									<li>
										<option value="">Show all</option>
									</li>
									[for (room : Room | rooms)]
										[for (device : Device | room.devices)]
											<li>
												<!-- option value: roomName, roomLen, roomWidth, deviceType, deviceName, deviceLen, deviceWidth -->
												<option value='[roomInfo(room) + ': ' + deviceInfo(device)/]'> 
													[room.name + ' ' + device.name/]
												</option>
											</li>
										[/for]
									[/for]
								</select>
								<table id="result" style="display:none"></p>
	
								<!-- Room Table -->
								<table id="allDevices">
									<tr><th>Rooms</th><th>Devices</th></tr>
									[for (room : Room | rooms)]
									<tr>
										<td><p>[room.name/] <br> [room.length/] X [room.width/]</p><br></td>
										<td>
											[for (device : Device | room.devices)]
												[if (device.type.oclIsTypeOf(Sensor))]
													Sensor	|	[device.name/]	|	([device.lengthPos/], [device.widthPos/]) <br>
												[/if]
												[if (device.type.oclIsTypeOf(Actuator))]
													Actuator	|	[device.name/]	|	([device.lengthPos/], [device.widthPos/]) <br>
												[/if]
											[/for]
										</td>
									</tr>
									[/for]
								</table>


								<h2 class="major">Automation rule</h2>
								<!-- Automation rule-->	
								<table>
									<tr>
										<th>Name</th>
										<th>Rule</th>
									</tr>
								
									[for (r : AutomationRule | rules)]
										[rule()/]
									[/for]
									
								</table>							
								
							</article>

					</div>

				<!-- Footer -->
					<footer id="footer">
						<p class="copyright">&copy; ECSE439P 7. Design adapted from: <a href="https://html5up.net">HTML5 UP</a>.</p>
					</footer>

			</div>

		<!-- BG -->
			<div id="bg"></div>

		<!-- Scripts -->
			<script src="assets/js/jquery.min.js"></script>
			<script src="assets/js/browser.min.js"></script>
			<script src="assets/js/breakpoints.min.js"></script>
			<script src="assets/js/util.js"></script>
			<script src="assets/js/main.js"></script>

		<!-- HAl specific scripts -->
			<script>
				function displaySensors() {
					var x = document.getElementsByClassName("sensor");
					if (window.getComputedStyle(x[ '[' /]0[ ']' /]).display === "none") {
						document.querySelectorAll(".sensor").forEach(a => {
							a.style.display = "block";
							a.style.visibility = "visible";
						});
					}
					else {
						document.querySelectorAll(".sensor").forEach(a=>a.style.display = "none");
  					}
				}

				function displayActuators() {
					var x = document.getElementsByClassName("actuator");
					if (window.getComputedStyle(x[ '[' /]0[ ']' /]).display === "none") {
						document.querySelectorAll(".actuator").forEach(a => {
							a.style.display = "block";
							a.style.visibility = "visible";
						});
					}
					else {
						document.querySelectorAll(".actuator").forEach(a=>a.style.display = "none");
  					}
				}

				$("#selectDevice").change(function(){
					
					var device = $("#selectDevice").val();
					// clear the table in advance
					$("#result tr").remove();

					
					for (var trRule of document.getElementsByClassName('rule')) {
						trRule.style.display = 'table-row';
					}

					if(device != ""){
						$("#result").show();
						$("#allDevices").hide();

						var list = device.split(": ");

						$("#result").append('<tr><th>Room</th><th>Device</th></tr>');
						$("#result").append('<tr><th>' + list[ '[' /]0[ ']' /] + '</th><th>' + list[ '[' /]1[ ']' /] + '</th></tr>');

						var terms = device.split("\t");
						var nameForRule = terms.at(4) + " IN " + terms.at(0);
						var nameForRule2 = terms.at(4) + ".";
						for (var trRule of document.getElementsByClassName('rule')) {
							if (!trRule.children[ '[' /]1[ ']' /].innerHTML.includes(nameForRule) && !trRule.children[ '[' /]1[ ']' /].innerHTML.includes(nameForRule2)) {
								trRule.style.display = 'none';
							}
						}	
					}else{
						$("#allDevices").show();
						$("#result").hide();
					}
				})

				var hideMode = false;
				function toggleHide() {
					hideMode = !hideMode;
				}

				document.querySelectorAll(".sensor, .actuator").forEach(d => {
					d.onclick = () => {
						if (hideMode) {
							d.style.visibility = "hidden";
						}
					}
				})
			</script>
	</body>
</html>
[/file]
[/template]

[template public rule(aRule : AutomationRule)]
<tr class="rule">
	<td>
	[aRule.name/]
	</td>
	<td>
	<b>WHEN</b>
	   [expression(aRule.precondition)/]<br/>
	<b>THEN</b>
	   [for (anAction : Action | aRule.actions)]<br/>[action()/][/for]
	</td>
</tr>
[/template]

[template public expression(anExpression : BooleanExpression)]
[if (anExpression.negated)]NOT ([/if][if (anExpression.oclIsTypeOf(AtomicRelationalTerm))][atomicTerm(anExpression.oclAsType(AtomicRelationalTerm))/][else][compoundTerm(anExpression.oclAsType(CompoundRelationalTerm))/][/if][if (anExpression.negated)])[/if]
[/template]

[template public atomicTerm(aTerm : AtomicRelationalTerm)]
[aTerm.sensor.name/] IN [aTerm.sensor.eContainer().oclAsType(Room).name/] [aTerm.operator/] [aTerm.comparedAgainstValue/]
[/template]

[template public compoundTerm(aTerm : CompoundRelationalTerm)]
([expression(aTerm.LHS)/]
[aTerm.operator/] [expression(aTerm.RHS)/])
[/template]

[template public action(anAction : Action)]
[anAction.actuator.name/].[anAction.command.name/] IN [anAction.actuator.eContainer().oclAsType(Room).name/]
[/template]

[template public deviceInfo(device : Device)]
[if (device.type.oclIsTypeOf(Sensor))]
	Sensor	|	[device.name/]	|	([device.lengthPos/], [device.widthPos/])[/if]
[if (device.type.oclIsTypeOf(Actuator))]
	Actuator	|	[device.name/]	|	([device.lengthPos/], [device.widthPos/])[/if]
[/template]

[template public roomInfo(room : Room)]
[room.name/]	[room.length/] X [room.width/]
[/template]
